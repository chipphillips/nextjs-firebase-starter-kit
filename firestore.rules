rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    function getUserRole() {
      return isSignedIn() && exists(/databases/$(database)/documents/users/$(request.auth.uid)) ? get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role : null;
    }

    function isAdmin() {
      return getUserRole() == 'admin';
    }

    function isBetaUser() {
      return getUserRole() == 'betaUser';
    }

    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isAdmin();
      allow delete: if isAdmin();
    }

    match /posts/{postId} {
      allow read: if true; // Publicly readable
      allow create, update, delete: if isAdmin();
    }

    match /projects/{projectId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin() || isBetaUser();
    }

    match /users/{userId}/activityLogs/{logId} {
      allow read, write: if isSignedIn() && (request.auth.uid == userId || isAdmin());
    }

    // Add additional rules for other collections as needed
  }
}